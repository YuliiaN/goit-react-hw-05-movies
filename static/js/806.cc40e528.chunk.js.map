{"version":3,"file":"static/js/806.cc40e528.chunk.js","mappings":"gSAEaA,EAAmBC,EAAAA,EAAAA,GAAH,0GAQhBC,EAAmBD,EAAAA,EAAAA,GAAH,yGAQhBE,EAAaF,EAAAA,EAAAA,KAAH,yE,SCoCvB,EA5CgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,MAEAC,EAAAA,EAAAA,YAAU,YACR,mCAAC,6GAEqBC,EAAAA,EAAAA,gBAAoBN,GAFzC,OAESO,EAFT,OAGGH,EAAWG,GAHd,gDAKGC,QAAQC,IAAI,KAAMC,SALrB,yDAAD,sDAQD,GAAE,CAACV,IAEJ,IAAMW,GAAW,qEAEjB,OACE,8BACGR,EAAQS,QACP,SAAChB,EAAD,UACGO,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACX,UAACnB,EAAD,YACE,eAAGoB,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAlC,WACE,SAACrB,EAAD,uBACA,SAACA,EAAD,CAAYmB,MAAO,CAAEG,WAAY,MAAOC,SAAU,QAAlD,SACGP,KAEH,UAAChB,EAAD,YACE,SAAC,MAAD,CAAQmB,MAAO,CAAEK,MAAO,UACvBP,SAGL,uBAAIC,MAXiBH,EADZ,MAiBfH,GAIP,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledReviewList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n  list-style: none;\n`;\n\nexport const StyledReviewItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  font-size: 18px;\n`;\n\nexport const StyledSpan = styled.span`\n  display: inline-flex;\n  align-items: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaStar } from 'react-icons/fa';\nimport { api } from 'pages/Home/Home';\nimport {\n  StyledReviewList,\n  StyledReviewItem,\n  StyledSpan,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async function fetchReviews() {\n      try {\n        const res = await api.getMovieReviews(movieId);\n        setReviews(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [movieId]);\n\n  const notFound = <p>We didn't find any reviews for this movie</p>;\n\n  return (\n    <>\n      {reviews.length ? (\n        <StyledReviewList>\n          {reviews.map(({ id, username, rating, content }) => (\n            <StyledReviewItem key={id}>\n              <p style={{ display: 'flex', gap: '10px' }}>\n                <StyledSpan>Author:</StyledSpan>\n                <StyledSpan style={{ fontWeight: '600', fontSize: '20px' }}>\n                  {username}\n                </StyledSpan>\n                <StyledSpan>\n                  <FaStar style={{ color: 'gold' }} />\n                  {rating}\n                </StyledSpan>\n              </p>\n              <p>{content}</p>\n            </StyledReviewItem>\n          ))}\n        </StyledReviewList>\n      ) : (\n        notFound\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["StyledReviewList","styled","StyledReviewItem","StyledSpan","movieId","useParams","useState","reviews","setReviews","useEffect","api","res","console","log","message","notFound","length","map","id","username","rating","content","style","display","gap","fontWeight","fontSize","color"],"sourceRoot":""}