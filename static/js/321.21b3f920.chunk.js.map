{"version":3,"file":"static/js/321.21b3f920.chunk.js","mappings":"gSAEaA,EAAaC,EAAAA,EAAAA,KAAH,wGAOVC,EAAcD,EAAAA,EAAAA,MAAH,4GAOXE,EAAeF,EAAAA,EAAAA,OAAH,4I,6BCoCzB,EA3Ce,WACb,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAuB/B,OAdAC,EAAAA,EAAAA,YAAU,WACHF,GAEL,mCAAC,sGAESG,EAAM,IAAIC,EAAAA,EAFnB,SAGqBD,EAAIE,gBAAgBL,GAHzC,OAGSM,EAHT,OAIGV,EAAUU,GAJb,gDAMGC,QAAQC,IAAI,KAAMC,SANrB,yDAAD,sDASD,GAAE,CAACT,KAGF,SAAC,EAAAU,SAAD,CAAUC,SAAS,OAAnB,UACE,UAAC,IAAD,YACE,UAACrB,EAAD,CAAYsB,SAxBD,SAAAC,GACfA,EAAEC,iBACF,IAAMd,EAAQa,EAAEE,OAAOf,MAAMgB,MAAMC,cAAcC,OAC5ClB,GACLD,EAAgB,CAAEoB,OAAQnB,GAC3B,EAmBK,WACE,SAACR,EAAD,CAAa4B,KAAK,WAClB,SAAC3B,EAAD,CAAc4B,KAAK,SAAnB,UACE,SAAC,MAAD,CACEC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,OAAQC,MAAO,mBAIlD9B,EAAO+B,SAAU,SAACC,EAAA,EAAD,CAAWhC,OAAQA,QAI9C,C","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledForm = styled.form`\n  height: 30px;\n  display: flex;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 400px;\n  height: 100%;\n  border: 1px solid grey;\n  border-right: none;\n`;\n\nexport const StyledButton = styled.button`\n  width: 50px;\n  height: 100%;\n  border: 1px solid maroon;\n  background-color: transparent;\n  cursor: pointer;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { BsSearch } from 'react-icons/bs';\n\nimport MovieService from 'services/MovieService';\nimport { StyledForm, StyledInput, StyledButton } from './Movies.styled';\nimport StyledContainer from 'components/Container/Container.styled';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('search');\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const query = e.target.query.value.toLowerCase().trim();\n    if (!query) return;\n    setSearchParams({ search: query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    (async function fetchMoviesByQuery() {\n      try {\n        const api = new MovieService();\n        const res = await api.getMovieByQuery(query);\n        setMovies(res);\n      } catch (error) {\n        console.log(error.message);\n      }\n    })();\n  }, [query]);\n\n  return (\n    <Suspense fallback=\"null\">\n      <StyledContainer>\n        <StyledForm onSubmit={onSubmit}>\n          <StyledInput name=\"query\" />\n          <StyledButton type=\"submit\">\n            <BsSearch\n              style={{ width: '20px', height: '20px', color: 'maroon' }}\n            />\n          </StyledButton>\n        </StyledForm>\n        {!!movies.length && <MovieList movies={movies} />}\n      </StyledContainer>\n    </Suspense>\n  );\n};\n\nexport default Movies;\n"],"names":["StyledForm","styled","StyledInput","StyledButton","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","api","MovieService","getMovieByQuery","res","console","log","message","Suspense","fallback","onSubmit","e","preventDefault","target","value","toLowerCase","trim","search","name","type","style","width","height","color","length","MovieList"],"sourceRoot":""}